{"version":3,"sources":["Assets/lock.gif","Assets/bunq.svg","Containers/Login/Login.style.js","Containers/Login/Login.js","Components/Modal/Modal.style.js","Components/Modal/Modal.js","API/index.js","Containers/Inbox/InboxContainer.style.js","Containers/Inbox/InboxContainer.js","Containers/Conversation/Conversation.style.js","Containers/Conversation/ConversationContainer.js","Routes/index.js","Components/Header/Header.style.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImageContainer","styled","div","Image","img","Container","HelperText","p","InputContainer","Input","input","Button","button","Login","props","getUserId","userId","console","log","setState","setUserIdQueryParamater","history","push","state","src","Lock","alt","onChange","event","target","value","type","placeholder","disabled","this","onClick","Component","closed","ModalContent","CloseButton","span","Modal","closeModal","modalContent","api","axios","create","baseURL","FormOption","Table","table","TableHead","thead","TableRow","tr","pagination","TableCell","th","transperent","width","TableBody","tbody","Count","Text","UserName","InboxContainer","getAllUsers","get","then","response","data","allUsers","catch","error","onUserCheck","users","selectedUsers","join","setTimeout","handleGroupNameChange","groupName","createGroupConversationModalContent","map","user","index","key","id","name","createGroup","createPersonalConversationModalContent","createPersonalConversation","body","post","openCreatePersonalChatModal","getAllConversationsForUser","openCreateGroupChatModal","closeCreateGroupChatModal","closeCreatePersonalChatModal","openConversation","conversationId","conversations","reverse","createGroupChatModal","createPersonalChatModal","userName","location","pathname","getUserIdFromURL","pathName","indexOf","substr","parseInt","getUserDetails","length","conversation","lastseen","is_owner","TimeStamp","MessagesContainer","MessageContainer","LastSeen","Conversation","putLastSeenTimeStamp","Date","now","toString","put","getLastSeenTimeStamp","getAllMessagesAfterSendingAMessage","lastMessageId","getMessage","message","sendMessage","senderId","getLimitedAmmountOfMessages","allMessages","getConversationIdFromURL","conversationIdIndex","slice","timestamp","Routes","exact","path","component","Inbox","Brand","Separator","SeparatorPart","rainbowOne","rainbowTwo","rainbowThree","rainbowFour","rainbowFive","rainbowSix","rainbowSeven","rainbowEight","rainbowNine","rainbowTen","rainbowEleven","rainbowTwelve","Header","Logo","GlobalStyles","createGlobalStyle","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb114e50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lock.5005dbcc.gif\";","module.exports = __webpack_public_path__ + \"static/media/bunq.139cf12c.svg\";","import styled from 'styled-components'\r\n\r\nexport const ImageContainer=styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\n\r\n`\r\nexport const Image =styled.img`\r\nheight:350px;\r\n`\r\nexport const Container =styled.div`\r\nwidth:100%;\r\nbackground-color :#e96361;\r\nheight:90vh;\r\n`\r\n\r\nexport const HelperText=styled.p`\r\nfont-size:18px;\r\ncolor:#fff;\r\n `\r\nexport const InputContainer=styled.div`\r\ntext-align:center;\r\n\r\n`\r\nexport const Input=styled.input`\r\n  text-align:center;\r\n  margin:auto;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  &:placeholder{\r\n    color: #B0BEC5;\r\n  }\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const Button=styled.button`\r\nmargin: 0 5px;\r\nbox-shadow: 0px 10px 18px -7px #276873;\r\nbackground:linear-gradient(to bottom, #599bb3 5%, #408c99 100%);\r\nbackground-color:#599bb3;\r\nborder-radius:5px;\r\ndisplay:inline-block;\r\ncursor:pointer;\r\ncolor:#ffffff;\r\nfont-size:16px;\r\nfont-weight:bold;\r\npadding:15px;\r\ntext-decoration:none;\r\ntext-shadow:0px 1px 0px #3d768a;\r\nborder:none;\r\n\r\n\r\n&:hover{\r\n    background:linear-gradient(to bottom, #408c99 5%, #599bb3 100%);\r\n\tbackground-color:#408c99;\r\n}\r\n&:active{\r\n    position:relative;\r\n\ttop:1px;\r\n}\r\n\r\n`\r\n","import React, { Component } from 'react'\r\nimport Lock from '../../Assets/lock.gif'\r\nimport {\r\n    Image,\r\n    Container,\r\n    HelperText,\r\n    ImageContainer,\r\n    InputContainer,\r\n    Input,\r\n    Button\r\n} from './Login.style'\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            userId : 0\r\n        }\r\n    }\r\n    getUserId=(userId)=>{\r\n        console.log(userId)\r\n        this.setState({userId})\r\n    }\r\n    setUserIdQueryParamater=()=>{\r\n        this.props.history.push(`/inbox/id=${this.state.userId}`)\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <ImageContainer>\r\n                    <Image src={Lock} alt='lock'/>\r\n                </ImageContainer>\r\n                <InputContainer>\r\n                <HelperText>Please Enter Your User Id To Accses Chat App</HelperText>\r\n                <Input onChange ={(event)=>this.getUserId(event.target.value)} type='number' placeholder='user id'/>\r\n                <Button disabled={this.state.userId ?false : true} onClick={()=>this.setUserIdQueryParamater()}>Login</Button>\r\n                </InputContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container=styled.div`\r\ndisplay: ${props=>props.closed ? 'block' : 'none'}\r\nposition: fixed; /* Stay in place */\r\nz-index: 1; /* Sit on top */\r\nleft: 0;\r\ntop: 0;\r\nwidth: 100%; /* Full width */\r\nheight: 100%; /* Full height */\r\noverflow: auto; /* Enable scroll if needed */\r\nbackground-color: rgb(0,0,0); /* Fallback color */\r\nbackground-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n\r\n`\r\n\r\nexport const ModalContent=styled.div`\r\n\r\nbackground-color: #fefefe;\r\nmargin: 15% auto; /* 15% from the top and centered */\r\npadding: 20px;\r\nborder: 1px solid #888;\r\nwidth: 80%; /* Could be more or less, depending on screen size */\r\n`\r\n\r\nexport const CloseButton=styled.span`\r\ncolor: #aaa;\r\nfloat: right;\r\nfont-size: 28px;\r\nfont-weight: bold;\r\n\r\n&:hover{\r\n    color: black;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n}\r\n&:focus{\r\n    color: black;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n}\r\n\r\n`","import React from 'react'\r\nimport {Container,ModalContent,CloseButton} from './Modal.style'\r\nconst Modal = ({closed,closeModal,modalContent}) => {\r\n  return (\r\n    <Container closed={closed}>\r\n      <ModalContent >\r\n        <CloseButton onClick={()=>closeModal()} >&times;</CloseButton>\r\n         {modalContent}\r\n      </ModalContent> \r\n    </Container>\r\n  )\r\n}\r\nexport default Modal\r\n","import axios from 'axios';\r\n\r\n const api = axios.create({\r\n    baseURL: 'http://assignment.bunq.com',\r\n  });\r\n\r\n\r\n  export default api","\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const FormOption=styled.div`\r\n\r\nmargin:2px;\r\n`\r\nexport const Button=styled.button`\r\ndisplay:inline-block;\r\ncursor:pointer;\r\nmargin:10px;\r\nbox-shadow: 0px 10px 18px -7px #276873;\r\nbackground:linear-gradient(to bottom, #599bb3 5%, #408c99 100%);\r\nbackground-color:#599bb3;\r\nborder-radius:5px;\r\ncursor:pointer;\r\ncolor:#ffffff;\r\nfont-size:16px;\r\nfont-weight:bold;\r\npadding:15px;\r\ntext-decoration:none;\r\ntext-shadow:0px 1px 0px #3d768a;\r\nborder:none;\r\n\r\n\r\n&:hover{\r\n    background:linear-gradient(to bottom, #408c99 5%, #599bb3 100%);\r\n\tbackground-color:#408c99;\r\n}\r\n&:active{\r\n    position:relative;\r\n\ttop:1px;\r\n}\r\n\r\n`\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  margin: auto;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n  border: solid 1px rgb(224, 224, 224);\r\n  border-collapse: collapse;\r\n  font-size: 15px;\r\n\r\n`\r\nexport const TableHead = styled.thead`\r\n  background-color: #f4f7fd;\r\n  \r\n`\r\n\r\nexport const TableRow = styled.tr`\r\nborder: 1px solid #fff;\r\n&:hover {\r\n    background-color: #f4f7fd;\r\n    cursor:pointer;\r\n}\r\n${props=>props.pagination? `\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n` :''}\r\n`\r\nexport const TableCell = styled.th`\r\n  font-weight: 500;\r\n  color :${props =>props.transperent ? '#fff' :'#98999b'};\r\n  height: 50px;\r\n  width :${props =>props.width ? props.width :'7.75%' }\r\n\r\n  `\r\n  export const TableBody=styled.tbody`\r\n\r\n\r\n`\r\nexport const Count=styled.span`\r\nfont-size:18px;\r\ncolor:red;\r\n`\r\nexport const Text=styled.p`\r\nfont-size:18px;\r\n\r\n`\r\nexport const Input=styled.input`\r\n  text-align:center;\r\n  margin:auto;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n  border-radius: 5px;\r\n  &:placeholder{\r\n    color: #B0BEC5;\r\n  }\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const UserName=styled.span`\r\ncolor:#808080\r\npadding:5px;\r\n\r\n`\r\nexport const HelperText=styled.p`\r\n\r\ncolor:#808080\r\ntext-align:center;\r\nfont-size:18px;\r\n`","import React, { Component } from 'react'\r\nimport Modal from '../../Components/Modal/Modal'\r\nimport api from '../../API'\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Count,\r\n  Text,\r\n  Button,\r\n  Input,\r\n  UserName,\r\n  FormOption,\r\n  HelperText\r\n} from './InboxContainer.style'\r\nexport default class InboxContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      userId: 0,\r\n      conversations: [],\r\n      userName:'',\r\n      openCreateGroupChatModal:false,\r\n      openCreatePersonalChatModal:false,\r\n      allUsers:[],\r\n      selectedUsers:[],\r\n      groupName:''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.location && this.props.location.pathname) {\r\n      console.log(this.props.location.pathname)\r\n      this.getUserIdFromURL(this.props.location.pathname)\r\n    }\r\n    this.getAllUsers()\r\n  }\r\n\r\n  \r\n\r\n  getAllUsers=()=>{\r\n    api.get('/users').then(response=>{\r\n      console.log(response.data)\r\n      this.setState({\r\n        allUsers :response.data\r\n      })\r\n    }).catch(error=>console.log(error,'error'))\r\n  }\r\n  onUserCheck=(userId)=>{\r\n   console.log(userId,'checked')\r\n   let users = this.state.selectedUsers;\r\n   users.push(userId)\r\n   console.log(users.join())\r\n   setTimeout(() => {\r\n    this.setState({\r\n      selectedUsers: users\r\n    });}, 300);\r\n \r\n  }\r\n  handleGroupNameChange=(groupName)=>{\r\n    setTimeout(() => {\r\n      this.setState({\r\n        groupName\r\n      })    }, 300);\r\n  \r\n  }\r\n  createGroupConversationModalContent=()=>{\r\n    const {allUsers}=this.state\r\n    return(\r\n    <div>\r\n      <HelperText>Create a group conversation</HelperText>\r\n      <Input type='text' onChange={(event)=>this.handleGroupNameChange(event.target.value)} placeholder='group name' />\r\n      {allUsers && allUsers.map((user,index)=>{\r\n        return(\r\n          <FormOption key={index}>\r\n          <Input onClick={(event)=>this.onUserCheck(event.target.value)} type=\"checkbox\" value={user.id}/>\r\n          <UserName>{user.name}</UserName>\r\n          </FormOption>\r\n        )\r\n      })}\r\n      <Button onClick={()=>this.createGroup()}>Create Group Conversation</Button>\r\n\r\n    </div>)\r\n  }\r\n\r\n  createPersonalConversationModalContent=()=>{\r\n\r\n    const {allUsers}=this.state\r\n    return(\r\n    <div>\r\n      <HelperText>Create a Personal conversation</HelperText>\r\n      {allUsers && allUsers.map((user,index)=>{\r\n        return(\r\n          <FormOption key={index}>\r\n          <Input onClick={(event)=>this.onUserCheck(event.target.value)} type=\"checkbox\" value={user.id}/>\r\n          <UserName>{user.name}</UserName>\r\n          </FormOption>\r\n        )\r\n      })}\r\n      <Button onClick={()=>this.createPersonalConversation()}>Create Personal Conversation</Button>\r\n\r\n    </div>)\r\n\r\n  }\r\n\r\n  createPersonalConversation=()=>{\r\n    let body ={\r\n      users :this.state.selectedUsers.join()\r\n    }\r\n    api.post('/conversation/personal',body).then(response=>{\r\n      this.setState({\r\n        openCreatePersonalChatModal:false,\r\n      })\r\n      this.getAllConversationsForUser(this.state.userId)\r\n\r\n      console.log(response)\r\n    }).catch(error=>console.log(error,'error'))\r\n  }\r\n\r\n  createGroup=()=>{\r\n    let body ={\r\n      name:this.state.groupName,\r\n      users :this.state.selectedUsers.join()\r\n    }\r\n    api.post('/conversation/group',body).then(response=>{\r\n      this.setState({\r\n        openCreateGroupChatModal:false,\r\n      })\r\n  this.getAllConversationsForUser(this.state.userId)\r\n      \r\n      console.log(response)\r\n    }).catch(error=>console.log(error,'error'))\r\n  }\r\n  \r\n  closeCreateGroupChatModal=()=>{\r\n    this.setState({\r\n      openCreateGroupChatModal:false\r\n    })\r\n  }\r\n  closeCreatePersonalChatModal=()=>{\r\n    this.setState({\r\n      openCreatePersonalChatModal:false\r\n    })\r\n  }\r\n\r\n  getUserDetails(userId){\r\n    api.get(`/user/${userId}`).then(response=>{\r\n      console.log(response.data)\r\n      this.setState({\r\n        userName :response.data.name\r\n      })\r\n    })\r\n  }\r\n\r\n  openConversation=(conversationId)=>{\r\n      console.log(conversationId)\r\n      this.props.history.push(`/conversation/id=${conversationId},userId=${this.state.userId}`)\r\n    }\r\n\r\n  getUserIdFromURL(pathName) {\r\n    let index = pathName.indexOf('=') + 1\r\n    if (index) {\r\n      let userId = pathName.substr(index)\r\n      userId = parseInt(userId)\r\n      this.setState({\r\n        userId\r\n      })\r\n      this.getAllConversationsForUser(userId)\r\n      this.getUserDetails(userId)\r\n\r\n    }\r\n  }\r\n  getAllConversationsForUser = userId => {\r\n    api\r\n      .get(`/conversation/user/${userId}`)\r\n      .then(response => {\r\n        if (response && response.data) {\r\n\r\n          this.setState({\r\n            conversations: response.data.reverse()\r\n          })\r\n          console.log(response, 'all conversations for user')\r\n        }\r\n      })\r\n      .catch(error => console.log('error', error))\r\n  }\r\n\r\n  createGroupChatModal=()=>{\r\n    console.log('open create group modal')\r\n    this.setState({\r\n      openCreateGroupChatModal:true\r\n    })\r\n  }\r\n  createPersonalChatModal=()=>{\r\n    console.log('open personal group modal')\r\n    this.setState({\r\n      openCreatePersonalChatModal:true\r\n    })\r\n  }\r\n  render() {\r\n    const { conversations ,userName,openCreateGroupChatModal,openCreatePersonalChatModal} = this.state\r\n    return (\r\n      <div>\r\n        <Button onClick={()=>this.createGroupChatModal()}>Create a group Chat</Button>\r\n        <Button onClick={()=>this.createPersonalChatModal()}>Create a personal Chat</Button>\r\n\r\n        <Text>\r\n          Hey {userName},You Have <Count>{conversations ? conversations.length : ''}</Count>{' '}\r\n          Conversations\r\n        </Text>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Last seen</TableCell>\r\n              <TableCell>Type</TableCell>\r\n              <TableCell>User role</TableCell>\r\n              <TableCell>Number of members</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {conversations &&\r\n              conversations.map((conversation, index) => {\r\n                return (\r\n                  <TableRow onClick={()=>this.openConversation(conversation.conversation.conversationId)} key={index}>\r\n                    <TableCell>\r\n                      { (conversation &&\r\n                        conversation.conversation &&\r\n                        conversation.conversation.name ) ?\r\n                         conversation.conversation.name\r\n                        : 'No name Available' }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      { (conversation &&\r\n                        conversation.conversation &&\r\n                        conversation.conversation.lastseen ) ?\r\n                         conversation.conversation.lastseen\r\n                        : 'Last seen stamp not available' }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      { (conversation &&\r\n                        conversation.conversation &&\r\n                        conversation.conversation.type &&\r\n                         conversation.conversation.type == 1 ) ?\r\n                         'Personal conversation' :\r\n                         (conversation &&\r\n                            conversation.conversation &&\r\n                            conversation.conversation.type &&\r\n                             conversation.conversation.type == 2 ) ? \r\n                            'Group conversation' : 'Conversation type not available'\r\n                            }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      { (conversation &&\r\n                        conversation.conversation &&\r\n                        conversation.conversation.is_owner &&\r\n                         conversation.conversation.is_owner == 1 ) ?\r\n                         'Admin' :\r\n                         (conversation &&\r\n                            conversation.conversation &&\r\n                            conversation.conversation.type &&\r\n                             conversation.conversation.type == 0 ) ? \r\n                            'Member' : 'User role not available'\r\n                            }\r\n                    </TableCell>\r\n                    <TableCell>{conversation && conversation.users ?conversation.users.length :'No members'}</TableCell>\r\n                    </TableRow>\r\n                )\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n        <Modal\r\n        closeModal={this.closeCreateGroupChatModal} \r\n        closed={openCreateGroupChatModal}\r\n        modalContent={this.createGroupConversationModalContent()}\r\n        />\r\n        <Modal\r\n        closeModal={this.closeCreatePersonalChatModal} \r\n        closed={openCreatePersonalChatModal}\r\n        modalContent={this.createPersonalConversationModalContent()}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const TimeStamp =styled.p`\r\ncolor:#808080;\r\ntext-align:right;\r\n`\r\nexport const Text =styled.p`\r\ncolor:#808080;\r\n\r\n\r\n`\r\n\r\nexport const HelperText=styled.p`\r\nfont-size:18px;\r\ncolor:#8b8b8b;\r\n`\r\nexport const InputContainer=styled.div`\r\ntext-align:center;\r\n\r\n`\r\nexport const Input=styled.input`\r\nwidth:90%;\r\nmargin:auto;\r\nfont-size: 14px;\r\nline-height: 50px;\r\nborder-radius: 5px;\r\n&:placeholder{\r\n  color: #B0BEC5;\r\n}\r\n\r\n&:focus{\r\n  outline: none;\r\n}\r\n`\r\nexport const Button=styled.button`\r\nmargin: 0 5px;\r\nbox-shadow: 0px 10px 18px -7px #276873;\r\nbackground:linear-gradient(to bottom, #599bb3 5%, #408c99 100%);\r\nbackground-color:#599bb3;\r\nborder-radius:5px;\r\ndisplay:inline-block;\r\ncursor:pointer;\r\ncolor:#ffffff;\r\nfont-size:16px;\r\nfont-weight:bold;\r\npadding:15px;\r\ntext-decoration:none;\r\ntext-shadow:0px 1px 0px #3d768a;\r\nborder:none;\r\n\r\n\r\n&:hover{\r\n    background:linear-gradient(to bottom, #408c99 5%, #599bb3 100%);\r\n\tbackground-color:#408c99;\r\n}\r\n&:active{\r\n    position:relative;\r\n\ttop:1px;\r\n}\r\n\r\n\r\n\r\n`\r\nexport const MessagesContainer=styled.div`\r\nheight:70vh;\r\nbackground-color:#fff;\r\noverflow:auto;\r\nborder:solid 1px #f4f7fd;\r\n\r\n`\r\nexport const MessageContainer=styled.div`\r\nwidth:95%;\r\nmargin:auto;\r\npadding:1px 5px;\r\nbackground-color:#f4f7fd;\r\nmargin:5px;\r\nborder-radius: 5px;\r\nmin-height:50px;\r\n`\r\nexport const LastSeen=styled.p`\r\ncolor:#808080;\r\n\r\n`","import React, { Component } from 'react'\r\nimport { HelperText, InputContainer, Input, Button ,MessagesContainer,MessageContainer,Text,TimeStamp,LastSeen} from './Conversation.style'\r\nimport api from '../../API'\r\n\r\nexport default class Conversation extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: '',\r\n      conversationId: 0,\r\n      allMessages: [],\r\n      userId:0,\r\n      lastseen:''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.location && this.props.location.pathname) {\r\n      console.log(this.props.location.pathname)\r\n      this.getConversationIdFromURL(this.props.location.pathname)\r\n      this.getUserIdFromURL(this.props.location.pathname)\r\n    }\r\n  }\r\n\r\n  putLastSeenTimeStamp =()=>{\r\n    let body={\r\n      lastseen:Date.now().toString()\r\n    }\r\n    api.put(`/conversation/${this.state.conversationId}/seen/${this.state.userId}`,body).then(response =>{\r\n      console.log(response,' seen')\r\n      this.setState({\r\n        lastseen:response.data.lastseen\r\n      })\r\n    }).catch(error=>console.log(error,'error'))\r\n  }\r\n\r\n  \r\n  getLastSeenTimeStamp =()=>{\r\n    api.get(`/conversation/${this.state.conversationId}/lastseen/${this.state.userId}`).then(response =>{\r\n      console.log(response,'last seen')\r\n\r\n    }).catch(error=>console.log(error,'error'))\r\n  }\r\n  getLimitedAmmountOfMessages(conversationId) {\r\n    api\r\n      .get(`/conversation/${conversationId}/message/limited?limit=100000&offset=0`)\r\n      .then(response => {\r\n          this.setState({\r\n              allMessages:response.data.reverse(),\r\n              message:''\r\n          })\r\n        console.log(response)\r\n      })\r\n      .catch(error => console.log('error', error))\r\n  }\r\n  getAllMessagesAfterSendingAMessage=(lastMessageId)=>{\r\n      api.get(`/conversation/${this.state.conversationId}/new/${lastMessageId}`).then(response=>{\r\n       \r\n          console.log(response)\r\n      }\r\n      ).catch(error=>console.log('error',error))\r\n  }\r\n\r\n  getConversationIdFromURL(pathName) {\r\n    let index = pathName.indexOf('=') + 1\r\n    if (index) {\r\n      let conversationId = pathName.substr(index)\r\n      let conversationIdIndex=conversationId.indexOf(',')\r\n      conversationId = conversationId.slice(0,conversationIdIndex)\r\n      conversationId = parseInt(conversationId)\r\n      console.log(conversationId,'conversation Id')\r\n      conversationId = parseInt(conversationId)\r\n      this.setState({\r\n        conversationId\r\n      },()=>this.putLastSeenTimeStamp())\r\n      this.getLimitedAmmountOfMessages(conversationId)\r\n    }\r\n\r\n  }\r\n  getUserIdFromURL(pathName){\r\n    console.log(pathName)\r\n    let index = pathName.indexOf(\",\")+8\r\n    console.log(index)\r\n    if (index) {\r\n      let userId = pathName.substr(index)\r\n      userId = parseInt(userId)\r\n      this.setState({\r\n        userId\r\n      },()=>this.getLastSeenTimeStamp())\r\n    }\r\n  } \r\n  getMessage = message => {\r\n    this.setState({\r\n      message\r\n    })\r\n  }\r\n  sendMessage = () => {\r\n    let body = {\r\n      message: this.state.message,\r\n      senderId: this.state.conversationId\r\n    }\r\n    api\r\n      .post(`/conversation/${this.state.conversationId}/message/send`, body)\r\n      .then(response => {\r\n        this.setState({\r\n          message: response.data\r\n        })\r\n        // this.getAllMessagesAfterSendingAMessage(response.data.id -1)\r\n        this.getLimitedAmmountOfMessages(this.state.conversationId)\r\n        console.log(response)\r\n      })\r\n      .catch(error => console.log('error', error))\r\n  }\r\n\r\n  render() {\r\n    const { allMessages } = this.state\r\n    return (\r\n      <>\r\n        <LastSeen>Last Seen on {this.state.lastseen}</LastSeen>\r\n        <Button onClick={()=>{this.getLimitedAmmountOfMessages(this.state.conversationId)}}>Refresh Conversation</Button>\r\n      <MessagesContainer>\r\n            {allMessages && allMessages.length\r\n            ? allMessages.map((message, index) => {\r\n                return (\r\n                    <MessageContainer key={index}>\r\n                    <Text>{message.message}</Text>\r\n                    <TimeStamp>{message.timestamp}</TimeStamp>\r\n                    </MessageContainer>\r\n                )\r\n                })\r\n            : ''}\r\n    </MessagesContainer>\r\n        <InputContainer>\r\n          <HelperText>Send message to user</HelperText>\r\n          <Input\r\n            onChange={event => this.getMessage(event.target.value)}\r\n            type=\"text\"\r\n            value={this.state.message || \"\"}\r\n            placeholder=\" write your message here...\"\r\n          />\r\n          <Button onClick={() => this.sendMessage()}>Send</Button>\r\n        </InputContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react' \r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Login from '../Containers/Login/Login'\r\nimport Inbox from '../Containers/Inbox/InboxContainer'\r\nimport Conversation from '../Containers/Conversation/ConversationContainer'\r\n\r\nconst Routes =()=> (\r\n    <Router>\r\n        <Route exact path=\"/\" component={Login}/>\r\n        <Route path=\"/inbox\" component ={Inbox}/>\r\n        <Route path =\"/conversation\" component ={Conversation}/>\r\n    </Router>\r\n)\r\n\r\nexport default Routes","import styled from 'styled-components'\r\n\r\nexport const Brand = styled.img`\r\n    height:35px;\r\n`\r\nexport const Separator =styled.div`\r\nwidth: 100%;\r\nheight: 10px;\r\nbackground-size: 100%;\r\nbackground-position: top center;\r\n`\r\nexport const SeparatorPart =styled.div`\r\ndisplay: inline-block;\r\nfloat: left;\r\nwidth: calc(100% / 12);\r\nheight: 100%;\r\n${props=>props.rainbowOne && `background-color: #238647;`}\r\n${props=>props.rainbowTwo && `background-color: #2F9B47;`}\r\n${props=>props.rainbowThree && `background-color: #62B64F;`}\r\n${props=>props.rainbowFour && `background-color: #89CC53;`}\r\n${props=>props.rainbowFive && `background-color: #3DB8AD;`}\r\n${props=>props.rainbowSix && `background-color: #3394D7;`}\r\n${props=>props.rainbowSeven && `background-color: #2872BC;`}\r\n${props=>props.rainbowEight && `background-color: #1D5C84;`}\r\n${props=>props.rainbowNine && `background-color: #993233;`}\r\n${props=>props.rainbowTen && `background-color: #E13030;`}\r\n${props=>props.rainbowEleven && `background-color: #F28825;`}\r\n${props=>props.rainbowTwelve && `background-color: #F5C836;`}\r\n\r\n\r\n\r\n`","import React from 'react'\r\nimport Logo from '../../Assets/bunq.svg'\r\nimport {\r\n    Brand,\r\n    Separator,\r\n    SeparatorPart\r\n}from './Header.style'\r\nconst Header=()=>{\r\n    return(\r\n        <>\r\n        <Brand src={Logo} alt='brand'/>\r\n        <Separator>\r\n            <SeparatorPart rainbowOne/>\r\n            <SeparatorPart rainbowTwo/>\r\n            <SeparatorPart rainbowThree/>\r\n            <SeparatorPart rainbowFour/>\r\n            <SeparatorPart rainbowFive/>\r\n            <SeparatorPart rainbowSix/>\r\n            <SeparatorPart rainbowSeven/>\r\n            <SeparatorPart rainbowEight/>\r\n            <SeparatorPart rainbowNine/>\r\n            <SeparatorPart rainbowTen/>\r\n            <SeparatorPart rainbowEleven/>\r\n            <SeparatorPart rainbowTwelve/>\r\n        </Separator>\r\n        </>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\nimport Routes from './Routes'\nimport Header from './Components/Header/Header'\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n    font-family: 'Notable', sans-serif;\n  }\n`\n\nfunction App() {\n  return (<>\n    <Header/>\n   <Routes />\n   <GlobalStyles />\n\n  </>)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}